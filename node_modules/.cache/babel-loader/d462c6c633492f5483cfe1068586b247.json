{"ast":null,"code":"var _jsxFileName = \"/Users/jimcool/Desktop/robofriends/src/Containers/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../Components/CardList';\nimport SearcBox from '../Components/SearchBox';\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundry from '../Components/ErrorBoundry';\nimport './App.css';\nimport { setSearchField } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    e\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [] // searchfield: ' ',\n\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  } // onSearchChange = event => {\n  //   this.setState({searchfield: event.target.value});\n  // };\n\n\n  render() {\n    // const {robots, searchfield} = this.state;\n    const {\n      robots\n    } = this.state;\n    const {\n      searchField,\n      onSearchChange\n    } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Loading\") : React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"RoboFriends\"), React.createElement(SearcBox, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(ErrorBoundry, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/jimcool/Desktop/robofriends/src/Containers/App.js"],"names":["React","Component","connect","CardList","SearcBox","Scroll","ErrorBoundry","setSearchField","mapStateToProps","state","searchField","searchRobots","robots","requestRobots","isPending","e","mapDispatchToProps","dispatch","onSearchChange","event","target","value","App","constructor","componentDidMount","fetch","then","response","json","users","setState","render","props","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAGA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAM;AACFC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAD9B;AAEFE,IAAAA,MAAM,EAAEH,KAAK,CAACI,aAAN,CAAoBD,MAF1B;AAGDE,IAAAA,SAAS,EAAEL,KAAK,CAACI,aAAN,CAAoBC,SAH9B;AAIDC,IAAAA;AAJC,GAAN;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAM;AACJC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD/B,GAAN;AAGD,CAJD;;AAMA,MAAMC,GAAN,SAAkBrB,SAAlB,CAA4B;AAC1BsB,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKd,KAAL,GAAa;AACXG,MAAAA,MAAM,EAAE,EADG,CAEX;;AAFW,KAAb;AAID;;AAEDY,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAClB,MAAAA,MAAM,EAAEiB;AAAT,KAAd,CAFjB;AAGD,GAbyB,CAe1B;AACA;AACA;;;AAEAE,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEnB,MAAAA;AAAF,QAAa,KAAKH,KAAxB;AACA,UAAM;AAAEC,MAAAA,WAAF;AAAeQ,MAAAA;AAAf,QAAkC,KAAKc,KAA7C;AACA,UAAMC,cAAc,GAAGrB,MAAM,CAACsB,MAAP,CAAcC,KAAK,IAAI;AAC5C,aAAOA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAmC5B,WAAW,CAAC2B,WAAZ,EAAnC,CAAP;AACD,KAFsB,CAAvB;AAIA,WAAO,CAACzB,MAAM,CAAC2B,MAAR,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADK,GAGL;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAGrB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEe,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAHF,CAHF;AAaD;;AAxCyB;;AA2C5B,eAAe/B,OAAO,CAACM,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../Components/CardList';\nimport SearcBox from '../Components/SearchBox';\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundry from '../Components/ErrorBoundry';\nimport './App.css';\nimport { setSearchField } from '../actions';\n\n\nconst mapStateToProps = state => {\n  return{\n      searchField: state.searchRobots.searchField,\n      robots: state.requestRobots.robots,\n       isPending: state.requestRobots.isPending,\n       e\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return{ \n    onSearchChange: (event) => dispatch(setSearchField(event.target.value))\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      // searchfield: ' ',\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({robots: users}));\n  }\n\n  // onSearchChange = event => {\n  //   this.setState({searchfield: event.target.value});\n  // };\n\n  render() {  \n    // const {robots, searchfield} = this.state;\n    const { robots } = this.state;\n    const { searchField, onSearchChange } = this.props;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes( searchField.toLowerCase());\n    });\n\n    return !robots.length ? (\n      <h1>Loading</h1>\n    ) : (\n      <div className=\"tc\">\n        <h1 className=\"f2\">RoboFriends</h1>\n        <SearcBox searchChange={ onSearchChange} />\n        <Scroll>\n          <ErrorBoundry>\n            <CardList robots={filteredRobots} />\n          </ErrorBoundry>\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}